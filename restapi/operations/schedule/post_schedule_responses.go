// Code generated by go-swagger; DO NOT EDIT.

package schedule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"schedule/models"
)

// PostScheduleOKCode is the HTTP code returned for type PostScheduleOK
const PostScheduleOKCode int = 200

/*
PostScheduleOK OK

swagger:response postScheduleOK
*/
type PostScheduleOK struct {

	/*
	  In: Body
	*/
	Payload *models.ScheduleCreateScheduleResponseDTO `json:"body,omitempty"`
}

// NewPostScheduleOK creates PostScheduleOK with default headers values
func NewPostScheduleOK() *PostScheduleOK {

	return &PostScheduleOK{}
}

// WithPayload adds the payload to the post schedule o k response
func (o *PostScheduleOK) WithPayload(payload *models.ScheduleCreateScheduleResponseDTO) *PostScheduleOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post schedule o k response
func (o *PostScheduleOK) SetPayload(payload *models.ScheduleCreateScheduleResponseDTO) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostScheduleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostScheduleBadRequestCode is the HTTP code returned for type PostScheduleBadRequest
const PostScheduleBadRequestCode int = 400

/*
PostScheduleBadRequest Bad Request

swagger:response postScheduleBadRequest
*/
type PostScheduleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.HTTPHandlerErrorResponse `json:"body,omitempty"`
}

// NewPostScheduleBadRequest creates PostScheduleBadRequest with default headers values
func NewPostScheduleBadRequest() *PostScheduleBadRequest {

	return &PostScheduleBadRequest{}
}

// WithPayload adds the payload to the post schedule bad request response
func (o *PostScheduleBadRequest) WithPayload(payload *models.HTTPHandlerErrorResponse) *PostScheduleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post schedule bad request response
func (o *PostScheduleBadRequest) SetPayload(payload *models.HTTPHandlerErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostScheduleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostScheduleInternalServerErrorCode is the HTTP code returned for type PostScheduleInternalServerError
const PostScheduleInternalServerErrorCode int = 500

/*
PostScheduleInternalServerError Internal Server Error

swagger:response postScheduleInternalServerError
*/
type PostScheduleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.HTTPHandlerErrorResponse `json:"body,omitempty"`
}

// NewPostScheduleInternalServerError creates PostScheduleInternalServerError with default headers values
func NewPostScheduleInternalServerError() *PostScheduleInternalServerError {

	return &PostScheduleInternalServerError{}
}

// WithPayload adds the payload to the post schedule internal server error response
func (o *PostScheduleInternalServerError) WithPayload(payload *models.HTTPHandlerErrorResponse) *PostScheduleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post schedule internal server error response
func (o *PostScheduleInternalServerError) SetPayload(payload *models.HTTPHandlerErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostScheduleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
